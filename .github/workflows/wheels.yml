name: Build, Test, and Publish Wheels

on:
  push:
    branches:
      - main
      - "release/*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.6.0
      - name: Build the wheels
        env:
          CIBW_BEFORE_BUILD: |
            pip install setuptools-rust==1.9.0
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            export PATH="$HOME/.cargo/bin:$PATH"
            source $HOME/.cargo/env
            rustc --version
        run: cibuildwheel --output-dir dist
      - name: Rename wheels
        run: |
          mkdir -p renamed_wheels
          for whl in dist/*.whl; do
            mv "$whl" "renamed_wheels/$(basename "$whl" | sed 's/linux/manylinux2014/')"
          done
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-manylinux2014-${{ matrix.python-version }}
          path: renamed_wheels/*

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust
        run: brew install rust
      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.6.0
      - name: Build the wheels
        env:
          CIBW_BEFORE_BUILD: "pip install setuptools-rust==1.9.0"
        run: cibuildwheel --output-dir dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-macos-${{ matrix.python-version }}
          path: dist/*

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust
        run: rustup default stable
      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.6.0
      - name: Build the wheels
        env:
          CIBW_BEFORE_BUILD: "pip install setuptools-rust==1.9.0"
        run: cibuildwheel --output-dir dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-windows-${{ matrix.python-version }}
          path: dist/*

  publish:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, macos, windows]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/${{ matrix.os }}/${{ matrix.python-version }}
      - name: Combine all artifacts
        run: mkdir -p final_dist && find dist/ -type f -exec cp {} final_dist/ \;
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install twine
        run: pip install twine
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload final_dist/*

  test-wheels:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install wheels
        run: pip install dist/${{ matrix.os }}/${{ matrix.python-version }}/*.whl
      - name: Run tests
        run: pytest
